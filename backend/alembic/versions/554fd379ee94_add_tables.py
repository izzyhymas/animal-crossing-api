"""Add tables

Revision ID: 554fd379ee94
Revises: 
Create Date: 2024-05-09 10:27:50.183997

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '554fd379ee94'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gyroid',
    sa.Column('gyroid_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('sound', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('gyroid_name')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('native_fruit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('villager',
    sa.Column('villager_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('species', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('personality', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('quote', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('villager_id')
    )
    op.create_table('usergyroidlink',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('gyroid_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['gyroid_name'], ['gyroid.gyroid_name'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'gyroid_name')
    )
    op.create_table('uservillagerlink',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('villager_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['villager_id'], ['villager.villager_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'villager_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('uservillagerlink')
    op.drop_table('usergyroidlink')
    op.drop_table('villager')
    op.drop_table('users')
    op.drop_table('gyroid')
    # ### end Alembic commands ###
